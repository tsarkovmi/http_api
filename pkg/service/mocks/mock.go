// Code generated by MockGen. DO NOT EDIT.
// Source: service.go
//
// Generated by this command:
//
//	mockgen -source=service.go -destination=mocks/mock.go
//

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	http_api "github.com/tsarkovmi/http_api"
	gomock "go.uber.org/mock/gomock"
)

// MockCRUD is a mock of CRUD interface.
type MockCRUD struct {
	ctrl     *gomock.Controller
	recorder *MockCRUDMockRecorder
	isgomock struct{}
}

// MockCRUDMockRecorder is the mock recorder for MockCRUD.
type MockCRUDMockRecorder struct {
	mock *MockCRUD
}

// NewMockCRUD creates a new mock instance.
func NewMockCRUD(ctrl *gomock.Controller) *MockCRUD {
	mock := &MockCRUD{ctrl: ctrl}
	mock.recorder = &MockCRUDMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCRUD) EXPECT() *MockCRUDMockRecorder {
	return m.recorder
}

// CreateWorker mocks base method.
func (m *MockCRUD) CreateWorker(worker http_api.Worker) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWorker", worker)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateWorker indicates an expected call of CreateWorker.
func (mr *MockCRUDMockRecorder) CreateWorker(worker any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWorker", reflect.TypeOf((*MockCRUD)(nil).CreateWorker), worker)
}

// FindWorkerByID mocks base method.
func (m *MockCRUD) FindWorkerByID(workerId int) (http_api.Worker, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindWorkerByID", workerId)
	ret0, _ := ret[0].(http_api.Worker)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindWorkerByID indicates an expected call of FindWorkerByID.
func (mr *MockCRUDMockRecorder) FindWorkerByID(workerId any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindWorkerByID", reflect.TypeOf((*MockCRUD)(nil).FindWorkerByID), workerId)
}

// GetAllWorkers mocks base method.
func (m *MockCRUD) GetAllWorkers() ([]http_api.Worker, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllWorkers")
	ret0, _ := ret[0].([]http_api.Worker)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllWorkers indicates an expected call of GetAllWorkers.
func (mr *MockCRUDMockRecorder) GetAllWorkers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllWorkers", reflect.TypeOf((*MockCRUD)(nil).GetAllWorkers))
}
