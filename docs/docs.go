// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/workers": {
            "get": {
                "description": "Получение списка всех работников из базы данных",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workers"
                ],
                "summary": "Get all workers",
                "responses": {
                    "200": {
                        "description": "Список всех работников",
                        "schema": {
                            "$ref": "#/definitions/handler.serResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Создание нового работника в базе данных",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workers"
                ],
                "summary": "Add a new worker",
                "parameters": [
                    {
                        "description": "Worker info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httpapi.Worker"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ID созданного работника",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/workers/{id}": {
            "get": {
                "description": "Получение информации о работнике по его ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workers"
                ],
                "summary": "Get a worker by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Worker ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные о работнике",
                        "schema": {
                            "$ref": "#/definitions/handler.serResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный ID",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.errorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.serResponse": {
            "type": "object",
            "properties": {
                "JSON": {
                    "type": "string"
                },
                "TOML": {
                    "type": "string"
                },
                "XML": {
                    "type": "string"
                }
            }
        },
        "httpapi.Worker": {
            "type": "object",
            "required": [
                "age",
                "name",
                "occupation",
                "salary"
            ],
            "properties": {
                "age": {
                    "description": "являются реализацией фреймворка gin",
                    "type": "integer"
                },
                "id": {
                    "description": "чтобы искало в FindWorkerById",
                    "type": "integer"
                },
                "name": {
                    "description": "Валидируют наличие данных полей в теле запроса",
                    "type": "string"
                },
                "occupation": {
                    "type": "string"
                },
                "salary": {
                    "type": "number"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Workers Management API",
	Description:      "API для управления данными о работниках (CRUD операции).",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
